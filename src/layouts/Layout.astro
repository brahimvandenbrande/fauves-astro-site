---
import BaseHead from "@components/BaseHead.astro";
import { ClientRouter } from 'astro:transitions';
import Navigation from "@components/Navigation.astro";
import AnimateHeading from "@components/animations/AnimateHeading.astro";
import "@styles/global.css";

interface Props {
  title: string;
  description: string;
  canonical?: string;
  noindex?: boolean;
  ogImage?: string;
  structuredData?: any;
}

const { title, description, canonical, noindex, ogImage, structuredData } =
  Astro.props as Props;
---

<!doctype html>
<html lang="fr-be">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="view-transition" content="same-origin" />
    <!-- Preload key fonts to minimize layout shift during swap -->
    <link rel="preload" href="/fonts/Degular-Light.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="/fonts/Degular-Semibold.woff2" as="font" type="font/woff2" crossorigin>
    <link 
      rel="alternate" 
      type="application/rss+xml" 
      title="RSS Feed for Fauves" 
      href={new URL('rss.xml', Astro.site).toString()} 
    />

    <style is:inline>
      /* Critical CSS could be inlined here */
      :root {
        --page-transition: 200ms ease;
      }

      /* Add any critical above-the-fold styles here */
      body {
        opacity: 1;
      }
      
      /* Navigation transition */
      header {
        view-transition-name: main-header;
        contain: layout;
      }
      
      /* View Transition styles */
      @keyframes fade-in {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
      }
      
      @keyframes fade-out {
        to { opacity: 0; transform: translateY(-10px); }
      }
      
      ::view-transition-old(root) {
        animation: 150ms cubic-bezier(0.4, 0, 0.2, 1) both fade-out;
      }
      
      ::view-transition-new(root) {
        animation: 300ms cubic-bezier(0, 0, 0.2, 1) 150ms both fade-in;
      }
      
      /* Style the header during the transition */
      ::view-transition-old(main-header),
      ::view-transition-new(main-header) {
        /* Prevent the default animation for the header */
        animation: none;
        /* Use normal blending to ensure the header is always visible */
        mix-blend-mode: normal;
      }
      
      /* Fallback for browsers without view transitions */
      @media not (prefers-reduced-motion) {
        .no-view-transitions [data-astro-transition-scope="old"] {
          opacity: 0;
        }
        
        .no-view-transitions [data-astro-transition-scope="new"] {
          animation: fade-in 0.3s ease forwards;
        }
      }
    </style>

    <BaseHead
      title={title}
      description={description}
      canonical={canonical}
      noindex={noindex}
      ogImage={ogImage}
      structuredData={structuredData}
    />

    <!-- Sitemap link with media="print" to avoid render blocking -->
    <link
      rel="sitemap"
      href="/sitemap-index.xml"
      media="print"
      onload="this.media='all'"
    />

    <slot name="head" />
    
    <!-- Add ClientRouter for client-side navigation with View Transitions -->
    <ClientRouter />
  </head>
  <body class="overflow-x-hidden antialiased">
    <!-- Skip to main content link for keyboard users -->
    <a href="#main-content" class="sr-only focus:not-sr-only focus:fixed focus:top-4 focus:left-4 focus:z-50 focus:bg-white focus:px-4 focus:py-2 focus:font-medium focus:ring-2 focus:ring-[#522BE2] focus:ring-offset-2 focus:rounded">
      Aller au contenu principal
    </a>
    
    <Navigation />
    
    <main id="main-content" data-astro-transition-scope="new">
      <slot />
    </main>

    <!-- Initialize view transitions -->
    <script>
      // Initialize view transitions with our utility
      import { initViewTransitions } from '../utils/transitions';
      
      // Run initialization when the DOM is fully loaded
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
          initViewTransitions();
        });
      } else {
        initViewTransitions();
      }
    </script>
    
    <!-- GSAP animations are now handled by AnimateHeading component -->
    <AnimateHeading />
  </body>
</html>
