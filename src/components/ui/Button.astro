---
interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  className?: string;
}

const { 
  href, 
  variant = 'primary',
  className = '' 
} = Astro.props;

const baseClasses = 'inline-flex items-center rounded-full font-semibold text-sm px-5 py-2.5 transition-colors uppercase tracking-wider border';

const variants = {
  // Primary: purple by default; on hover -> black background, white text, purple border
  primary: 'bg-violet-600 text-white border-transparent hover:bg-black hover:text-white hover:border-violet-600',
  // Secondary is white by default; on hover, switch to purple bg, white text, and white border
  secondary: 'bg-white text-violet-700 border-violet-600 hover:bg-violet-600 hover:text-white hover:border-white',
  // Outline starts transparent with violet border/text; on hover, switch to purple bg, white text, white border
  outline: 'bg-transparent text-violet-700 border-violet-600 hover:bg-violet-600 hover:text-white hover:border-white'
};

const buttonClasses = `${baseClasses} ${variants[variant]} ${className}`;
---

{!href ? (
  <button class={buttonClasses}>
    <slot />
  </button>
) : (
  <a href={href} class={buttonClasses}>
    <slot />
  </a>
)}
